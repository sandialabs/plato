stages: [plato-build-test]

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: fastest
  CACHE_COMPRESSION_LEVEL: fastest
  CLEAN_CACHE: "true"
 
.trigger-pipeline:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_PIPELINE_SOURCE == "web"
  variables:
    TRIGGER_BRANCH: ${PARENT_BRANCH}
    TRIGGER_SOURCE: ${PARENT_SOURCE}
  trigger:
    include: ci/pipeline.yml
    strategy: depend
  needs: []
 
trigger-cpu:
  stage: plato-build-test
  extends: .trigger-pipeline
  variables:
    CONFIGURATION: "cpu-python-app"
    SYSTEM: "gremlin"
    EXECUTOR: "shell"

trigger-cpu-debug:
  stage: plato-build-test
  extends: .trigger-pipeline
  variables:
    CONFIGURATION: "cpu-debug"
    SYSTEM: "gremlin"
    EXECUTOR: "shell"
    SKIP_PA_REGRESSION_TESTS: "true"
    SKIP_PE_REGRESSION_TESTS: "true"

trigger-gpu:
  stage: plato-build-test
  extends: .trigger-pipeline
  variables:
    CONFIGURATION: "gpu"
    SYSTEM: "lumbergh"
    EXECUTOR: "shell"

trigger-dakota:
  stage: plato-build-test
  extends: .trigger-pipeline
  variables:
    CONFIGURATION: "dakota"
    SYSTEM: "gremlin"
    EXECUTOR: "shell"
    CTEST_INCLUDE_REGEX: "dakota"
    SKIP_PA_UNIT_TESTS: "true"

trigger-optimism:
  stage: plato-build-test
  extends: .trigger-pipeline
  variables:
    CONFIGURATION: "optimism"
    SYSTEM: "gremlin"
    EXECUTOR: "shell"
    SKIP_PE_UNIT_TESTS: "true"
    SKIP_PA_UNIT_TESTS: "true"
    SKIP_PA_REGRESSION_TESTS: "true"
    CTEST_INCLUDE_REGEX: "optimism"

trigger-xtk:
  stage: plato-build-test
  extends: .trigger-pipeline
  variables:
    CONFIGURATION: "xtk"
    SYSTEM: "lumbergh"
    EXECUTOR: "shell"
    SKIP_PA_UNIT_TESTS: "true"
    SKIP_PE_UNIT_TESTS: "true"
    SKIP_PA_REGRESSION_TESTS: "true"
    SKIP_PE_REGRESSION_TESTS: "true"

